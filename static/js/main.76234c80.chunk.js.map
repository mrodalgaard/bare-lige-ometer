{"version":3,"sources":["util/theme.ts","util/firebase.ts","util/analytics.ts","util/constants.ts","components/CornerBanner.tsx","util/types.ts","components/Input.tsx","util/helpers.ts","components/Meter.tsx","components/ShareButton.tsx","components/Title.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","background","header","success","warning","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","LogEvent","analytics","logEvent","event","parameters","sendToAnalytics","id","name","value","WebVitals","Math","round","isSupported","then","title","process","meterColors","githubLink","QueryParameter","StyledLink","styled","a","CornerBanner","useTheme","href","aria-label","onClick","GithubLink","xmlns","width","height","viewBox","fill","d","StyledInput","input","StyledLabel","label","Input","useState","setTitle","useQueryParam","StringParam","paramTitle","setParamTitle","inputRef","useRef","debounceParamTitle","useDebouncedCallback","debouncedTitle","TextChange","useEffect","undefined","current","focus","callback","cancel","htmlFor","ref","type","onChange","target","capValue","min","max","Container","div","Number","p","Meter","showAsNumber","gaugeValue","setGaugeValue","NumberParam","paramValue","setParamValue","canvasRef","gaugeRef","set","options","angle","lineWidth","radiusScale","pointer","length","strokeWidth","color","limitMax","limitMin","highDpiSupport","staticZones","map","index","strokeStyle","floor","ceil","Gauge","setOptions","maxValue","setMinValue","percent","ValueChange","updateGauge","clientX","window","innerWidth","CopiedLabel","ShareButton","copied","setCopied","setTimeout","ShareClick","shareData","url","location","navigator","share","webShare","clipboard","writeText","addToClipboard","Header","h1","Title","App","ReactRouterRoute","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76234c80.chunk.js","sourcesContent":["const theme = {\n  background: \"#ecf0f1\",\n  header: \"#464a4e\",\n\n  success: \"#00b894\",\n  warning: \"#fdcb6e\",\n  error: \"#d63031\",\n};\n\nexport default theme;\n","import firebase from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCh4kyWy3-higbBhQBndDjhGLChN9iwWvI\",\n  authDomain: \"bare-lige-ometer-6568b.firebaseapp.com\",\n  databaseURL: \"https://bare-lige-ometer-6568b.firebaseio.com\",\n  projectId: \"bare-lige-ometer-6568b\",\n  storageBucket: \"bare-lige-ometer-6568b.appspot.com\",\n  messagingSenderId: \"630676087916\",\n  appId: \"1:630676087916:web:6155aef8e58e215c036449\",\n  measurementId: \"G-PNV2NF5MND\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import \"firebase/analytics\";\nimport { Metric } from \"web-vitals\";\nimport firebase from \"./firebase\";\n\nexport enum LogEvent {\n  ShareClick = \"share_click\",\n  ValueChange = \"value_change\",\n  TextChange = \"text_change\",\n\n  GithubLink = \"github_link\",\n\n  WebVitals = \"web_vitals\",\n}\n\nclass Analytics {\n  private analytics: firebase.analytics.Analytics | undefined;\n\n  constructor() {\n    firebase.analytics.isSupported().then((isSupported) => {\n      if (isSupported) {\n        this.analytics = firebase.analytics();\n      }\n    });\n  }\n\n  public logEvent = (event: LogEvent, parameters?: any) => {\n    this.analytics?.logEvent(event, parameters);\n  };\n\n  public sendToAnalytics = ({ id, name, value }: Metric) => {\n    this.analytics?.logEvent(LogEvent.WebVitals, {\n      id,\n      name,\n      value: Math.round(name === \"CLS\" ? value * 1000 : value),\n    });\n  };\n}\n\nexport default new Analytics();\n","import theme from \"./theme\";\n\nexport const title = process.env.REACT_APP_WEBSITE_NAME ?? \"\";\n\nexport const meterColors = [theme.success, theme.warning, theme.error];\n\nexport const githubLink = process.env.REACT_APP_GIT ?? \"\";\n","import * as React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport analytics, { LogEvent } from \"util/analytics\";\nimport { githubLink } from \"util/constants\";\n\nconst StyledLink = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  &:hover svg {\n    fill: ${({ theme }) => theme.success};\n  }\n`;\n\nconst CornerBanner = () => {\n  const { background, header } = useTheme();\n\n  const onClick = () => {\n    analytics.logEvent(LogEvent.GithubLink);\n  };\n\n  return (\n    <StyledLink href={githubLink} aria-label=\"Github\" onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 250 250\"\n        fill={background}\n      >\n        <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill={header} />\n        <path d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\" />\n        <path d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\n      </svg>\n    </StyledLink>\n  );\n};\n\nexport default CornerBanner;\n","export interface ShareData {\n  title: string;\n  text?: string;\n  url: string;\n}\n\nexport interface MeterColorPercent {\n  strokeStyle: string;\n  min: number;\n  max: number;\n}\n\nexport enum QueryParameter {\n  title = \"title\",\n  value = \"value\",\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDebouncedCallback } from \"use-debounce/lib\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport analytics, { LogEvent } from \"util/analytics\";\nimport { QueryParameter } from \"util/types\";\n\nconst StyledInput = styled.input`\n  display: block;\n  margin: 0 auto;\n  width: 100%;\n\n  background: transparent;\n  border: 0;\n  outline: 0;\n  font-size: 30px;\n  color: ${({ theme }) => theme.header};\n  text-align: center;\n`;\n\nconst StyledLabel = styled.label`\n  display: none;\n`;\n\nconst Input = () => {\n  const [title, setTitle] = useState(\"\");\n  const [paramTitle, setParamTitle] = useQueryParam(\n    QueryParameter.title,\n    StringParam\n  );\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Set query parameter title and log event on debounced title change\n  const debounceParamTitle = useDebouncedCallback((debouncedTitle: string) => {\n    analytics.logEvent(LogEvent.TextChange);\n    setParamTitle(debouncedTitle);\n  }, 500);\n\n  useEffect(() => {\n    // Set input title value to query parameter title\n    if (paramTitle !== undefined && paramTitle !== null) {\n      setTitle(paramTitle);\n    }\n    // Focus input if title is not set\n    else {\n      inputRef?.current?.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Use debounce to update title dependencies\n  useEffect(() => {\n    debounceParamTitle.callback(title);\n    return debounceParamTitle.cancel;\n  }, [title, debounceParamTitle]);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <StyledLabel htmlFor=\"text\">CHANGE TEXT</StyledLabel>\n      <StyledInput\n        id=\"text\"\n        ref={inputRef}\n        type=\"text\"\n        value={title}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import { meterColors } from \"./constants\";\nimport { MeterColorPercent } from \"./types\";\n\nexport const getMeterColor = (percentage: number): string => {\n  const index = Math.floor(meterColors.length * (percentage / 100));\n  return meterColors[Math.min(index, meterColors.length - 1)];\n};\n\nexport const getMeterColorPercents = (): MeterColorPercent[] => {\n  return meterColors.map((color, index) => ({\n    strokeStyle: color,\n    min: Math.floor(index * (100 / meterColors.length)),\n    max: Math.ceil((index + 1) * (100 / meterColors.length)),\n  }));\n};\n\nexport const capValue = (value: number): number => {\n  return Math.min(100, Math.max(0, value));\n};\n","import { Gauge } from \"gaugeJS\";\nimport React, { MouseEvent, useEffect, useRef, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { NumberParam, useQueryParam } from \"use-query-params\";\nimport analytics, { LogEvent } from \"util/analytics\";\nimport { capValue, getMeterColorPercents } from \"util/helpers\";\nimport { QueryParameter } from \"util/types\";\n\nconst Container = styled.div`\n  display: flex;\n\n  canvas {\n    flex: 1;\n    max-height: calc(100vh - 260px);\n    width: 100%;\n  }\n`;\n\nconst Number = styled.p`\n  font-size: 190px;\n  color: ${({ theme }) => theme.header};\n  width: 100%;\n  margin: 10px;\n  text-align: center;\n`;\n\ninterface IProps {\n  showAsNumber?: boolean;\n}\n\nconst Meter = ({ showAsNumber = false }: IProps) => {\n  const { header } = useTheme();\n  const [gaugeValue, setGaugeValue] = useState(0);\n  const [paramValue, setParamValue] = useQueryParam(\n    QueryParameter.value,\n    NumberParam\n  );\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gaugeRef = useRef<typeof Gauge>(null);\n\n  // Set gauge value to query parameter after render\n  useEffect(() => {\n    if (paramValue !== undefined && paramValue !== null) {\n      setGaugeValue(capValue(paramValue));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Update query parameter and gauge when value changes\n  useEffect(() => {\n    setParamValue(gaugeValue || undefined);\n    gaugeRef?.current?.set(gaugeValue);\n  }, [gaugeValue, setParamValue]);\n\n  const updateGauge = (value: number) => {\n    const percent = Math.round(capValue(value * 100));\n    setGaugeValue(percent);\n    analytics.logEvent(LogEvent.ValueChange, { value: percent });\n  };\n\n  const onContentClick = (event: MouseEvent) => {\n    updateGauge(event.clientX / window.innerWidth);\n  };\n\n  useEffect(() => {\n    if (showAsNumber) {\n      return;\n    }\n\n    const options = {\n      angle: 0,\n      lineWidth: 0.4,\n      radiusScale: 1,\n      pointer: {\n        length: 0.55,\n        strokeWidth: 0.1,\n        color: header,\n      },\n      limitMax: false,\n      limitMin: true,\n      highDpiSupport: true,\n      staticZones: getMeterColorPercents(),\n    };\n\n    gaugeRef.current = new Gauge(canvasRef.current).setOptions(options);\n    gaugeRef.current.maxValue = 100;\n    gaugeRef.current.setMinValue(0);\n    gaugeRef.current.set(0);\n  }, [header, showAsNumber]);\n\n  return (\n    <Container onClick={onContentClick}>\n      {showAsNumber ? (\n        <Number>{gaugeValue}%</Number>\n      ) : (\n        <canvas ref={canvasRef}></canvas>\n      )}\n    </Container>\n  );\n};\n\nexport default Meter;\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport analytics, { LogEvent } from \"util/analytics\";\nimport { title } from \"util/constants\";\nimport { ShareData } from \"util/types\";\n\nconst StyledLink = styled.a`\n  position: absolute;\n  top: 6px;\n  left: 12px;\n\n  color: ${({ theme }) => theme.header};\n  cursor: pointer;\n\n  &:hover svg {\n    fill: ${({ theme }) => theme.success};\n  }\n`;\n\nconst CopiedLabel = styled.p`\n  margin: 0;\n  font-size: 15px;\n`;\n\nconst ShareButton = () => {\n  const [copied, setCopied] = useState(false);\n\n  // Show temporary copied text when flag is toggled\n  useEffect(() => {\n    if (copied) {\n      setTimeout(() => setCopied(false), 3000);\n    }\n  }, [copied, setCopied]);\n\n  // Copy to clipboard\n  const addToClipboard = (shareData: ShareData): boolean => {\n    if (window.navigator?.clipboard?.writeText) {\n      window.navigator.clipboard.writeText(shareData.url);\n      return true;\n    }\n    return false;\n  };\n\n  // Share using Web Share API\n  const webShare = (shareData: ShareData): boolean => {\n    const navigator = window.navigator as any;\n    if (navigator?.share) {\n      try {\n        navigator.share(shareData);\n        return true;\n      } catch {}\n    }\n    return false;\n  };\n\n  const exportButtonClick = () => {\n    analytics.logEvent(LogEvent.ShareClick);\n\n    const shareData = {\n      title,\n      url: window.location.href,\n    };\n\n    if (webShare(shareData) || addToClipboard(shareData)) {\n      setCopied(true);\n    }\n  };\n\n  return (\n    <StyledLink onClick={exportButtonClick} aria-label=\"Share\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"56\"\n        height=\"56\"\n        viewBox=\"0 0 576 512\"\n        fill=\"currentColor\"\n      >\n        <path d=\"M568.482 177.448L424.479 313.433C409.3 327.768 384 317.14 384 295.985v-71.963c-144.575.97-205.566 35.113-164.775 171.353 4.483 14.973-12.846 26.567-25.006 17.33C155.252 383.105 120 326.488 120 269.339c0-143.937 117.599-172.5 264-173.312V24.012c0-21.174 25.317-31.768 40.479-17.448l144.003 135.988c10.02 9.463 10.028 25.425 0 34.896zM384 379.128V448H64V128h50.916a11.99 11.99 0 0 0 8.648-3.693c14.953-15.568 32.237-27.89 51.014-37.676C185.708 80.83 181.584 64 169.033 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-88.806c0-8.288-8.197-14.066-16.011-11.302a71.83 71.83 0 0 1-34.189 3.377c-7.27-1.046-13.8 4.514-13.8 11.859z\"></path>\n      </svg>\n      {copied && <CopiedLabel>copied</CopiedLabel>}\n    </StyledLink>\n  );\n};\n\nexport default ShareButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { title } from \"util/constants\";\n\nconst Header = styled.h1`\n  font-size: 80px;\n  color: ${({ theme }) => theme.header};\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst Title = () => {\n  return (\n    <header>\n      <Header>{title}</Header>\n    </header>\n  );\n};\n\nexport default Title;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { QueryParamProvider } from \"use-query-params\";\nimport theme from \"util/theme\";\nimport CornerBanner from \"./CornerBanner\";\nimport Input from \"./Input\";\nimport Meter from \"./Meter\";\nimport ShareButton from \"./ShareButton\";\nimport Title from \"./Title\";\n\nconst App = () => {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <QueryParamProvider ReactRouterRoute={Route}>\n          <ShareButton />\n          <CornerBanner />\n          <Title />\n          <Input />\n          <Meter />\n        </QueryParamProvider>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from \"components/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport analytics from \"util/analytics\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(analytics.sendToAnalytics);\n"],"sourceRoot":""}